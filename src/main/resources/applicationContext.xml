<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://mybatis.org/schema/mybatis-spring
	http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- 加载配置文件 *.properties -->
    <context:property-placeholder
            location="classpath:database.properties"/>

    <!--配置数据库 dataSource -->
    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource">
        <!-- 加载数据库用户名 -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!-- 加载数据库密码 -->
        <property name="url" value="${jdbc.url}"/>
        <!-- 加载数据库连接 -->
        <property name="username" value="${jdbc.username}"/>
        <!-- 加载数据库驱动 -->
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置sqlsessioFactory -->
    <bean id="sqlSessionFactoryBean"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置数据源 引用（ref）dataSource（bean） -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis 配置文件 -->
        <property name="configLocation"
                  value="classpath:mybatis.xml"/>
        <property name="mapperLocations" value="classpath:Dao/*.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
<!--                        <value>-->
<!--                            helperDialect=mysql-->
<!--                            reasonable=true-->
<!--                        </value>-->
                        <props>
                            <prop key="helperDialect">mysql</prop>
                            <prop key="reasonable">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 配置扫描包 加载mapper代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描mapper路径 -->
        <property name="basePackage" value="Dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>

    <mybatis-spring:scan base-package="Dao"/>


    <!-- 扫描Service包 -->
    <context:component-scan base-package="Service"/>
    <context:component-scan base-package="Pojo"/>

    <context:component-scan base-package="Aop"/>
    <context:component-scan base-package="Controller"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--配置spring声明式事务管理-->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>



    <!--    &lt;!&ndash;配置事务通知&ndash;&gt;-->
    <!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--        <tx:attributes>-->
    <!--            &lt;!&ndash;所有find开头（查询）的方法设置只读&ndash;&gt;-->
    <!--            <tx:method name="find*" read-only="true"/>-->
    <!--            &lt;!&ndash;事务的隔离级别，默认default&ndash;&gt;-->
    <!--            <tx:method name="*" isolation="DEFAULT"/>-->
    <!--        </tx:attributes>-->
    <!--    </tx:advice>-->

    <!--    &lt;!&ndash;配置aop增强&ndash;&gt;-->
    <!--    <aop:config>-->
    <!--        <aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.test.service.impl.*.*(..))"></aop:advisor>-->
    <!--    </aop:config>-->

</beans>
